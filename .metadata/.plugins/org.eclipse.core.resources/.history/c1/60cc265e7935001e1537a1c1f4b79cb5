package br.ufrn.imd.solicitacaurn.solus.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.springframework.beans.factory.annotation.Value;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

import br.com.mkapi.solus.domain.enums.TipoUsuario;

@Entity
@Table(name ="usuario_solus_app_mob", schema="appmob")
public class UsuarioSolusAppMob implements Serializable{

	private static final long serialVersionUID = 968759168936132585L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;
	
	/**
	 * Email do usu√°rio no sistema
	 */
	private String email;
	
	/**
	 * Id do solus
	 */
	private Long idSolus;
	
	private String codigoSolus;
	
	/**
	 * chave da familia na database solus
	 */
	private Long chaveFamiliarSolus;
	
	@Transient
	private String cpf;
	
	private String login;
	
	@Column
	private Boolean ativo = true;
	
	@JoinColumn
	private String senha;
	
	@Temporal(TemporalType.DATE)
	@JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss")
	private Date dataNascimento;
	
	private String codRecuperacao;
	
	@Enumerated(EnumType.STRING)
	private TipoUsuario tipoUsuario;
	
	@JsonIgnore
	@OneToMany(mappedBy = "usuario",targetEntity = PrestadoresFavoritosSolus.class, cascade = {CascadeType.MERGE, CascadeType.PERSIST})
    private List<PrestadoresFavoritosSolus> prestadores = new ArrayList<>();
	
	@Transient
	@JsonIgnore
	@OneToMany(mappedBy = "usuario", cascade = {CascadeType.MERGE, CascadeType.PERSIST})
    private List<GuiaMedico> prestadoresFavoritos = new ArrayList<>();
	
	@JsonIgnore
	@OneToMany(mappedBy = "usuario", targetEntity = NotificacaoSolus.class,cascade = {CascadeType.MERGE, CascadeType.PERSIST})
	private List<NotificacaoSolus> notificacoes = new ArrayList<>();
	
	@ManyToOne
	@JoinColumn(name = "id_avatar",referencedColumnName = "id")
	private ArquivoSolus avatar;
	
	@Transient
	private String numCarteira;
	
	private Boolean senhaPadrao;

	private Boolean verNoticiaDestaque;
	
	@Column(length = 2000)
	private String firebaseToken;
	
	@Transient
	private List<BeneficiarioSolus> grupoFamiliar;
	
	@Transient
	@Value("${api.solus.token}")
	private String token;
	
	@Transient
	private String tokenRefresh;
	
	@Transient
	private BeneficiarioSolus beneficiario;

	private Boolean autorizacaoCassi;

	@Temporal(TemporalType.DATE)
	@JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss")
	private Date dataAutorizacaoCassi;
	
	public BeneficiarioSolus getBeneficiario() {
		return beneficiario;
	}

	public void setBeneficiario(BeneficiarioSolus beneficiario) {
		this.beneficiario = beneficiario;
	}
	
	public List<GuiaMedico> getPrestadoresFavoritos() {
		return prestadoresFavoritos;
	}

	public void setPrestadoresFavoritos(List<GuiaMedico> prestadoresFavoritos) {
		this.prestadoresFavoritos = prestadoresFavoritos;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getCpf() {
		return cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}

	public String getSenha() {
		return senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public String getLogin() {
		return login;
	}

	public void setLogin(String login) {
		this.login = login;
	}
	
	public Long getId() {
		return id;
	}

	
	public void setId(Long id) {
		this.id = id;
	}

	public String getNumCarteira() {
		return numCarteira;
	}

	public void setNumCarteira(String numCarteira) {
		this.numCarteira = numCarteira;
	}

	public String getCodRecuperacao() {
		return codRecuperacao;
	}

	public void setCodRecuperacao(String codRecuperacao) {
		this.codRecuperacao = codRecuperacao;
	}

	public Boolean getSenhaPadrao() {
		return senhaPadrao;
	}

	public void setSenhaPadrao(Boolean senhaPadrao) {
		this.senhaPadrao = senhaPadrao;
	}

	public Boolean getVerNoticiaDestaque() {
		return verNoticiaDestaque;
	}

	public void setVerNoticiaDestaque(Boolean verNoticiaDestaque) {
		this.verNoticiaDestaque = verNoticiaDestaque;
	}

	public TipoUsuario getTipoUsuario() {
		return tipoUsuario;
	}

	public void setTipoUsuario(TipoUsuario tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}

	public List<PrestadoresFavoritosSolus> getPrestadores() {
		return prestadores;
	}

	public void setPrestadores(List<PrestadoresFavoritosSolus> prestadores) {
		this.prestadores = prestadores;
	}

	public String getFirebaseToken() {
		return firebaseToken;
	}

	public void setFirebaseToken(String firebaseToken) {
		this.firebaseToken = firebaseToken;
	}

	public List<NotificacaoSolus> getNotificacoes() {
		return notificacoes;
	}

	public void setNotificacoes(List<NotificacaoSolus> notificacoes) {
		this.notificacoes = notificacoes;
	}

	public ArquivoSolus getAvatar() {
		return avatar;
	}

	public void setAvatar(ArquivoSolus avatar) {
		this.avatar = avatar;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public String getTokenRefresh() {
		return tokenRefresh;
	}

	public void setTokenRefresh(String tokenRefresh) {
		this.tokenRefresh = tokenRefresh;
	}

	public Long getIdSolus() {
		return idSolus;
	}

	public void setIdSolus(Long idSolus) {
		this.idSolus = idSolus;
	}

	public String getCodigoSolus() {
		return codigoSolus;
	}

	public void setCodigoSolus(String codigoSolus) {
		this.codigoSolus = codigoSolus;
	}

	public List<BeneficiarioSolus> getGrupoFamiliar() {
		return grupoFamiliar;
	}

	public void setGrupoFamiliar(List<BeneficiarioSolus> grupoFamiliar) {
		this.grupoFamiliar = grupoFamiliar;
	}

	public Long getChaveFamiliarSolus() {
		return chaveFamiliarSolus;
	}

	public void setChaveFamiliarSolus(Long chaveFamiliarSolus) {
		this.chaveFamiliarSolus = chaveFamiliarSolus;
	}

	public Date getDataNascimento() {
		return dataNascimento;
	}

	public void setDataNascimento(Date dataNascimento) {
		this.dataNascimento = dataNascimento;
	}
	@JsonIgnore
	public Boolean isAtivo(){
	    return ativo;
	}

	public void setAtivo(Boolean ativo) {
	    this.ativo = ativo;
	}

	public Boolean getAutorizacaoCassi() {
		return autorizacaoCassi;
	}

	public void setAutorizacaoCassi(Boolean autorizacaoCassi) {
		this.autorizacaoCassi = autorizacaoCassi;
	}

	public Date getDataAutorizacaoCassi() {
		return dataAutorizacaoCassi;
	}

	public void setDataAutorizacaoCassi(Date dataAutorizacaoCassi) {
		this.dataAutorizacaoCassi = dataAutorizacaoCassi;
	}

	@Override
	public String toString() {
		return "UsuarioSolusAppMob [id=" + id + ", email=" + email + ", idSolus=" + idSolus + ", codigoSolus="
				+ codigoSolus + ", cpf=" + cpf + ", login=" + login + ", senha=" + senha + ", dataNascimento="
				+ dataNascimento + ", tipoUsuario=" + tipoUsuario + ", numCarteira=" + numCarteira + ", senhaPadrao="
				+ senhaPadrao + ", grupoFamiliar=" + grupoFamiliar + ", token=" + token + "]";
	}	
}
