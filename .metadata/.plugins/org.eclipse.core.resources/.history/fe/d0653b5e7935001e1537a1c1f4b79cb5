package br.ufrn.imd.solicitacaurn.solus.repository;

import org.springframework.data.jpa.repository.Query;
import org.springframework.transaction.annotation.Transactional;

import br.com.mkapi.solus.domain.Noticia;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.stereotype.Repository;

@Repository
public interface NoticiaRepository extends JpaRepository<Noticia, Long>{
 
    @Query(value = "SELECT * FROM (\r\n"
            + "  SELECT row_number() OVER (ORDER BY n.data_postagem DESC) linha, n.* FROM noticias n \r\n"
            + "  WHERE n.ativo = 1\r\n"
            + ") WHERE linha BETWEEN (?1 + 1) AND (?1 + 5)", nativeQuery = true)
    public List<Noticia> findAllOrderByDate(Integer offset);   

    @Query(value = "SELECT * FROM (\r\n"
        + "  SELECT row_number() OVER (ORDER BY n.data_postagem DESC) linha, n.* FROM noticias n \r\n"
        + "  WHERE n.ativo = 1 AND n.destaque = 1 AND CURRENT_DATE <= n.data_apresentacao \r\n"
        + ") WHERE linha = 1", nativeQuery = true)
    public Noticia findRecenteDestaque();
    //Retorna a notÃ­cia em destaque mais recente.

    @Query(value = "SELECT * FROM noticias n "
    + "WHERE n.ativo = 1 AND n.id = ?1 ", nativeQuery = true)
    public Optional<Noticia> findByIdAtivo(Long idNoticia);  

    @Transactional
	@Modifying
    @Query(value = "UPDATE noticias n "
    + "SET n.ativo = 0 "
    + "WHERE n.id = ?1 ", nativeQuery = true)
    public void setInativoById(Long idNoticia); 

    @Transactional
	@Modifying
    @Query(value = "UPDATE noticias n "
    + "SET n.ativo = 1 "
    + "WHERE n.id = ?1 ", nativeQuery = true)
    public void setAtivoById(Long idNoticia);     
}
