package br.ufrn.imd.solicitacaurn.solus.repository;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import br.com.mkapi.solus.domain.AvisoAtualizacao;

import org.springframework.data.jpa.repository.Modifying;

@Repository
public interface AvisoAtualizacaoRepository extends JpaRepository<AvisoAtualizacao, Long>{

    @Transactional
	@Modifying
    @Query(value = "UPDATE aviso_atualizacao avt "
    + "SET avt.ativo = 0 "
    + "WHERE avt.ativo = 1 AND avt.id != ?1 ", nativeQuery = true)
    public void inativarAvisosAtualizacao(Long idAvisoNovo);
    //Configura como inativo todos os avisos de atualização, exceto o
    //aviso passado por parâmetro.

    @Transactional
	@Modifying
    @Query(value = "UPDATE aviso_atualizacao avt "
    + "SET avt.ativo = 0 "
    + "WHERE avt.ativo = 1 AND avt.id = ?1 ", nativeQuery = true)
    public void inativarAvisoAtualizacao(Long idAvisoNovo);    

    @Query(value = "SELECT * FROM aviso_atualizacao avt "
    + "WHERE avt.ativo = 1 AND avt.id = ?1 ", nativeQuery = true)
    public Optional<AvisoAtualizacao> findByIdAtivo(Long idAviso);    

    @Query(value = "SELECT * FROM ( "
        + "SELECT row_number() OVER (ORDER BY aa.DATA_CRIACAO DESC) linha, aa.* "
        + "FROM AVISO_ATUALIZACAO aa "
        + "WHERE aa.ATIVO = 1 "
        + ") WHERE linha = 1 ", nativeQuery = true)
    public Optional<AvisoAtualizacao> findUltimaAtualizacao();
}