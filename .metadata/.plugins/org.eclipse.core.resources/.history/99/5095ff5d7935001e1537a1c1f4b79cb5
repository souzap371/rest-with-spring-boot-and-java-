package br.ufrn.imd.solicitacaurn.solus.controller;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import br.com.mkapi.solus.domain.AbstractEntity;


/**
 * Controller abstrato que contem os metodos basicos para a realização de um
 * CRUD.
 */

@Component
public abstract class AbstractController<T extends AbstractEntity> {

	/**
	 * Obtém repositório específico definido por classe filha.
	 * @return Repositótio responsável pela manipulação de entidade específica.
	 */
	protected abstract JpaRepository<T,UUID> getRepository();

	/**
	 * Retorna a lista de todas as entidades
	 */
	@GetMapping
	public ResponseEntity<List<T>> listar() {
		return new ResponseEntity<>(getRepository().findAll(), HttpStatus.OK);

	}
	
	@PostMapping
	public ResponseEntity<T> salvar(@RequestBody T entidade) {

		T obj = getRepository().save(entidade);
		
		if (obj.getId() != null)
			return new ResponseEntity<>(obj, HttpStatus.OK);
		
		return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
	}

	@DeleteMapping("/{id}")
	public ResponseEntity<T> remover(@PathVariable UUID id) {
		
		if(getRepository().findById(id) != null) {
			getRepository().deleteById(id);
			return new ResponseEntity<>(HttpStatus.OK);
		}
		
		return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Optional<T>> queryById(@PathVariable UUID id) {
		
		if(getRepository().findById(id) != null) {
			Optional<T> obj = getRepository().findById(id);
			return new ResponseEntity<Optional<T>>(obj, HttpStatus.OK);
		}
		
		return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<T> editar(@RequestBody T entidade, @PathVariable UUID id) {
		if(getRepository().findById(id) != null) {
			getRepository().save(entidade);
			return new ResponseEntity<>(entidade, HttpStatus.OK);
		}
		
		return new ResponseEntity<>(entidade, HttpStatus.OK);
	}
}
