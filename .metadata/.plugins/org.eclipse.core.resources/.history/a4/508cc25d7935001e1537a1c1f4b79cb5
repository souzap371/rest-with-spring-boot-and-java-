package br.ufrn.imd.solicitacaurn.mkdata.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import br.com.mkapi.mkdata.domain.EspecialidadeMkdata;
import br.com.mkapi.mkdata.repository.EspecialidadeRepositoryMkdata;
import br.com.mkapi.solus.domain.EspecialidadeDesativada;
import br.com.mkapi.solus.repository.EspecialidadeDesativadaRepository;

@Controller
@RequestMapping("/api/mkdata/especialidade")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class EspecialidadeControllerMkdata {

	@Autowired
	public EspecialidadeRepositoryMkdata especialidadeRepository;

	@Autowired
	private EspecialidadeDesativadaRepository especialidadeDesativadaRepository;

	@GetMapping("/getAll")
	public ResponseEntity<List<EspecialidadeMkdata>> getAll() {
		List<EspecialidadeMkdata> especialidades = especialidadeRepository.getAll();

		List<EspecialidadeDesativada> especialidadesDesativadas = especialidadeDesativadaRepository.findAll();
		List<Long> ids = especialidadesDesativadas.stream().map(especialidade -> especialidade.getIdEspecialidade())
				.collect(Collectors.toList());

		//Remove as especialidades desativadas.
		especialidades.removeIf(e -> (ids.contains(e.getId())));
		return new ResponseEntity<>(especialidades, HttpStatus.OK);
	}
}
