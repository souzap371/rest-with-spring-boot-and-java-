package br.ufrn.imd.solicitacaurn.mkdata.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import br.com.mkapi.mkdata.domain.Medico;
import br.com.mkapi.mkdata.repository.MedicoRepositoryMkdata;
import br.com.mkapi.solus.domain.ProfissionalDesabilitado;
import br.com.mkapi.solus.repository.ProfissionalDesabilitadoRepository;

@Controller
@RequestMapping("/api/mkdata/medico")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class MedicoControllerMkdata {

	@Autowired
	MedicoRepositoryMkdata medicoRepository;
	
	@Autowired
	ProfissionalDesabilitadoRepository desabilitadoRepository;
	
	@GetMapping("/getById/{id}")
	public ResponseEntity<Medico> getById(@PathVariable("id") Long id) {
		Medico medico = medicoRepository.findById(id).orElseGet(null);

		if(medico == null){
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}else{
			return new ResponseEntity<>(medico, HttpStatus.OK);
		}
	}
	
	@GetMapping("/getByEspecialidade/{idEspecialidade}")
	public ResponseEntity<List<Medico>> getByEspecialidade(@PathVariable("idEspecialidade") Long idEspecialidade) {
		List<Medico> medicos = medicoRepository.getMedicoByEspecialidade(idEspecialidade);
		List<ProfissionalDesabilitado> desabilitados = desabilitadoRepository.findAll(); 
		List<Long> ids = desabilitados.stream().map(desabilitado -> desabilitado.getId()).collect(Collectors.toList());
		
		//Remove os mÃ©dicos desativados.
		medicos.removeIf(medico -> (ids.contains(medico.getId())));
		return new ResponseEntity<>(medicos, HttpStatus.OK);
	}
}
