package br.ufrn.imd.solicitacaurn.cassi.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import br.com.mkapi.cassi.domain.MunicipioCassiDesativado;
import br.com.mkapi.cassi.repository.MunicipioCassiDesativadoRepository;

import org.springframework.web.bind.annotation.RequestBody;

import java.util.Optional;

@Controller
@RequestMapping("/api/cassi/municipioCassiDesativado")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class MunicipioCassiDesativadoController {

    @Autowired
	private MunicipioCassiDesativadoRepository municipioCassiDesativadoRepository;

    @GetMapping
	public ResponseEntity<List<MunicipioCassiDesativado>> getAll() {
		List<MunicipioCassiDesativado> result = municipioCassiDesativadoRepository.findAll();
		
		return new ResponseEntity<>(result, HttpStatus.OK);
	}

    @PostMapping
	public ResponseEntity<Object> post(@RequestBody MunicipioCassiDesativado municipio){
        if(municipio.getMunicipio() != null && municipio.getUf() != null){
			municipio = municipioCassiDesativadoRepository.save(municipio);
			return new ResponseEntity<>(municipio, HttpStatus.OK);
        } else {
            return new ResponseEntity<>("É necessário informar o município que será removido da listagem, junto ao seu respectivo estado.", HttpStatus.FORBIDDEN);
        }
	}

    @PostMapping("/{id}")
	public ResponseEntity<Object> update(@RequestBody MunicipioCassiDesativado municipio, @PathVariable(value = "id") Long id){
		Optional<MunicipioCassiDesativado> opt = municipioCassiDesativadoRepository.findById(id);
		if(opt.isPresent()){
            MunicipioCassiDesativado municipioDesativado = opt.get();
            municipioDesativado.setMunicipio(municipio.getMunicipio());
            municipioDesativado.setUf(municipio.getUf());
			municipioDesativado = municipioCassiDesativadoRepository.save(municipioDesativado);
			return new ResponseEntity<>(municipioDesativado, HttpStatus.OK);
		}
		else {
			return new ResponseEntity<>("Município desativado não encontrado.", HttpStatus.FORBIDDEN);
        }
	}    

	@DeleteMapping("/{id}")
	public ResponseEntity<MunicipioCassiDesativado> delete(@PathVariable(value = "id") Long id){
		Optional<MunicipioCassiDesativado> opt = municipioCassiDesativadoRepository.findById(id);
		if(!opt.isPresent())
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		else {
			municipioCassiDesativadoRepository.deleteById(id);
			return new ResponseEntity<>(HttpStatus.OK);	
		}
	}    
}
