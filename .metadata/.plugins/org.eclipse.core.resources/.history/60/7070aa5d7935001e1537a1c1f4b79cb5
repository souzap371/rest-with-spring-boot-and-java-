package br.ufrn.imd.solicitacaurn.cassi.repository;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import br.com.mkapi.cassi.domain.RedeCredenciada;

public interface RedeCredenciadaRepository extends JpaRepository<RedeCredenciada, Long>{
    @Query(value = "SELECT * FROM REDE_CREDENCIADA rc WHERE rc.CPFCNPJ = ?1", nativeQuery = true)
    public List<RedeCredenciada> getByCpfcnpj(String cpfcnpj);

    @Query(value="SELECT DISTINCT rc.municipio FROM REDE_CREDENCIADA rc "
    + "WHERE rc.municipio IS NOT NULL AND rc.UF = ?1 "
    + "ORDER BY rc.municipio ",nativeQuery = true)
	List<String> getMunicipiosByUf(String uf);

    @Query(value="SELECT DISTINCT rc.uf FROM REDE_CREDENCIADA rc WHERE rc.uf IS NOT NULL ORDER BY rc.uf",nativeQuery = true)
	List<String> getAllUf();

    @Query(value = "SELECT * FROM (SELECT DISTINCT rc.municipio FROM REDE_CREDENCIADA rc \r\n"
        + "WHERE rc.municipio IS NOT NULL AND UPPER(rc.municipio) LIKE UPPER('%' || ?2 || '%') AND rc.UF = ?1\r\n"
        + "ORDER BY case when rc.municipio LIKE UPPER(?2 || '%') then 0 else 1 END, rc.municipio) WHERE rownum <= 100 ", nativeQuery = true)
    public List<String> getMunicipiosByUfAndNome(String uf, String term);

    @Transactional
	@Modifying
    @Query(value = "DELETE FROM REDE_CREDENCIADA rc WHERE rc.id > 0", nativeQuery = true)
    public void deletarTodasRedesCredenciadas();
    //Deleta todas as entradas da tabela de Rede Credenciada.
}
